plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
}
// 读取 local.properties 文件
def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}

// 读取属性
def jwtKey = "\"${localProperties.getProperty("JWT_KEY", "")}\""

android {
    namespace 'com.example.qingting'
    compileSdk 35
    defaultConfig {
        applicationId "com.example.qingting"
        minSdk 30
        targetSdk 34
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "jwtKey", jwtKey
    }

    packagingOptions {
        exclude 'META-INF/*'

//        pickFirst 'META-INF/LGPL2.1'
        pickFirst 'README.md'
        pickFirst 'xsd/catalog.xml'
//        pickFirst 'META-INF/io.netty.versions.properties'
//        pickFirst 'META-INF/INDEX.LIST'
//        pickFirst 'META-INF/AL2.0'

    }
    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        buildConfig true
        viewBinding true
    }

    dataBinding {
        enabled = true
    }

    kotlinOptions {
        jvmTarget = '17'
    }
}

configurations.configureEach {
    resolutionStrategy {
        force 'jakarta.activation:jakarta.activation-api:1.2.1'
    }
}

dependencies {
    implementation libs.lifecycle.runtime.ktx
    implementation (libs.gradle) {
        exclude group: 'com.sun.activation', module: 'javax.activation'
    }
    implementation libs.glide
    implementation libs.core.ktx
    annotationProcessor libs.compiler
    implementation (libs.jjwt.api)
    implementation (libs.jjwt.impl)
    implementation (libs.jjwt.jackson)
    implementation libs.circleprogressview
    implementation libs.lombok
    annotationProcessor libs.lombok
    implementation libs.gson
    implementation libs.okhttp
    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}